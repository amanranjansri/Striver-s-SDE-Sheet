/**
 * Definition for singly-linked list.
 * class Node {
 * public:
 *     int data;
 *     Node *next;
 *     Node() : data(0), next(nullptr) {}
 *     Node(int x) : data(x), next(nullptr) {}
 *     Node(int x, Node *next) : data(x), next(next) {}
 * };
 */

Node *rotate(Node *head, int k) {
     // Write your code here.
     if(head == NULL || head -> next == NULL || k == 0)
     {
          return head;
     }

     int count = 1;
     Node* curr = head;

     while(curr -> next != NULL)
     {
          curr = curr -> next;
          count++;
     }

     curr -> next = head;
     k = k%count;
     k = count - k;

     while(k--)
     {
          curr = curr -> next;
     }
     head = curr -> next;
     curr -> next = NULL;
     return head;
}
