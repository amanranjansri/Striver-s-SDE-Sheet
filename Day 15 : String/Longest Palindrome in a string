string longestPalinSubstring(string str) {
    // Write your code here.
    int n = str.length();
    vector<vector<int>>dp(n, vector<int>(n,0));
    int maxlength = 0;
    string ans;

    for(int diff = 0; diff < n; diff++)
    {
        for(int i = 0, j = i+diff; j < n; j++, i++)
        {
            if(i == j)
            {
                dp[i][j] = 1;
            }
            else if(diff == 1)
            {
                dp[i][j] = (str[i] == str[j] ? 2 : 0);
            }
            else
            {
                if(str[i] == str[j] && dp[i+1][j-1])
                {
                    dp[i][j] = dp[i+1][j-1] + 2;
                }
            }

            if(dp[i][j])
            {
                maxlength = max(maxlength, j-i+1);
                ans = str.substr(i, maxlength);
            }
        }
    }
    return ans;
}
